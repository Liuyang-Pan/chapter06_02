<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chapter06_02.mapper.UsersMapper">
    <!--    sql标签重用-->
    <sql id="usersColumns">
        loginId,Name,Address,Phone,Mail
    </sql>

    <!--    resultMap使用实例-->
    <!--    用resultMap元素解决列名和类属性不一致-->
    <resultMap id="resultMap" type="user">
        <id property="id" column="t_id"/>
        <result property="name" column="t_name"/>
        <result property="age" column="t_age"/>
    </resultMap>
    <select id="findAllUser" resultMap="resultMap">
        select * from t_user
    </select>
    <!--用resultMap元素实现通过有参构造方法将查询结果注入对象-->
    <resultMap id="result" type="users">
        <constructor>
            <arg column="loginId" javaType="String"/>
            <arg column="name" javaType="String"/>
            <arg column="address" javaType="String"/>
            <arg column="phone" javaType="String"/>
            <arg column="mail" javaType="String"/>
        </constructor>
    </resultMap>
    <select id="listUsersByCondition" parameterType="java.util.Properties" resultMap="result">
        select
        <include refid="usersColumns"/>
        from users where ${name} like concat('%',#{value},'%')
    </select>


    <!--    按照指定的列名查询满足条件的用户-->
    <select id="listUsers" parameterType="java.util.Properties" resultType="users">
        select
        <include refid="usersColumns"/>
        from users where ${field} like concat ('%',#{value},'%')
    </select>
    <!-- 登录操作sql语句 -->
    <select id="doLogin" parameterType="users" resultType="Integer" statementType="CALLABLE">
        {call sp_login(#{loginId,mode=IN},#{loginPwd,mode=IN})}
    </select>
    <!--    修改信息操作sql-->
    <update id="updateUsers" parameterType="java.util.Properties">
        update users set ${field} = #{value} where LoginId = #{loginId} and LoginPwd = #{loginPwd}
    </update>

    <insert id="doRegister" parameterType="users" statementType="CALLABLE">
        {call sp_registers(#{loginId,mode=IN},#{loginPwd,mode=IN})}
    </insert>


</mapper>